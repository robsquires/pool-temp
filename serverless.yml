service: pool-temp

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-plugin-aws-alerts

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-west-1
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "s3:PutObject"
    Resource:
      - "arn:aws:s3:::pool-temperatures/*"
  - Effect: "Allow"
    Action:
      - "s3:GetObject"
    Resource:
      - "arn:aws:s3:::pool-temperatures/*"

custom:
  alerts:
    stages:
      - dev
      - production
    topics:
      alarm:
        topic: ${self:service}-${opt:stage}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: rob@squires-associates.com # Change this to your email address
    definitions:
      httpApiAlarm:
        description: 'Http 4XX Responses'
        prefixTemplate: $[stackName]
        namespace: AWS/ApiGateway
        metric: 4XXError
        period: 60
        statistic: Sum
        threshold: 1
        evaluationPeriods: 1
        datapointsToAlarm: 1
        comparisonOperator: GreaterThanOrEqualToThreshold
        omitDefaultDimension: true
        dimensions:
          - Name: ApiName
            Value: ${opt:stage}-${self:service}
    alarms:
      - functionErrors
  
functions:
  ingestTweet:
    handler: src/handler.ingestTweet
    timeout: 30
    alarms:
      - httpApiAlarm
    events:
      - http:
          path: /ingest-tweet
          method: post
          private: false
  refreshLatestReading:
      handler: src/handler.refreshLatestReading
      timeout: 30
      events:
        - schedule: cron(0 3 * * ? *)

